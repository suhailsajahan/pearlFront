{"version":3,"sources":["api/api.js","contexts/AuthContext.js","components/Header.js","components/HomePage.js","components/AddCards.js","components/EditCards.js","components/ManageCards.js","components/ManageUsers.js","components/LoginPage.js","components/ForgotPassword.js","components/PrivateRoute.js","components/Signup.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","withCredentials","create","baseURL","AuthContext","createContext","useAuth","useContext","AuthProvider","props","useState","undefined","loggedIn","setLoggedIn","currentUser","setCurrentUser","loading","setLoading","getLoggedIn","a","api","get","loggedInRes","data","useEffect","unmounted","Provider","value","children","Header","isNavOpen","setIsNavOpen","dropdownOpen","setDropdownOpen","error","setError","history","useHistory","handleLogout","push","alert","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","to","ButtonDropdown","toggle","DropdownToggle","outline","DropdownMenu","DropdownItem","HomePage","isLoading","setIsLoading","users","setUsers","cards","setCards","then","response","catch","console","log","Spinner","color","Jumbotron","Row","style","width","margin","Progress","animated","flex","alignContent","height","length","AddCards","onAdd","name","setName","type","setType","description","setDescription","image","setImage","price","setPrice","isModalOpen","set_isModalOpen","toggleModal","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","htmlFor","Input","id","onChange","e","target","maxLength","multiple","onDone","base64","updateImage","preventDefault","EditCards","onEdit","card","_id","block","disabled","card_id","ManageCards","search","setSearch","searchedCards","setSearchedCards","filteredCards","setFilteredCards","isDeleteModalOpen","set_isDeleteModalOpen","deleteCardId","setDeleteCardId","pageNumber","setPageNumber","cardsVisited","pageCount","Math","ceil","toggleDeleteModal","addCard","post","editCard","put","map","scard","fcard","filterButton","button","filter","RenderEventCard","onDelete","Card","minWidth","Badge","CardImg","top","src","alt","CardBody","CardTitle","tag","CardSubtitle","new","pill","CardText","minHeight","toLowerCase","includes","Col","xs","sm","md","ButtonGroup","placeholder","slice","previousLabel","nextLabel","onPageChange","selected","containerClassName","activeClassName","delete","window","location","reload","ManageUsers","searchedUsers","setSearchedUsers","tempUser","setTempUser","deleteUserId","setDeleteUserId","usersVisited","editUser","user","email","displayUsers","index","Table","hover","user_id","fuser","Login","emailRef","useRef","passwordRef","loginData","current","password","Alert","onSubmit","innerRef","required","ForgotPassword","resetPassword","message","setMessage","size","offset","PrivateRoute","Component","component","rest","render","Signup","passwordConfirmRef","signupData","confirmPassword","variant","Main","exact","path","LoginPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.78da1157.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true; //This is what helps browser to get the cookie\r\n\r\nexport default axios.create({\r\n  // baseURL: \"http://localhost:5000\",\r\n  baseURL: \"https://pearl-admin.herokuapp.com\",\r\n  // baseURL: \"https://my-json-server.typicode.com/suhailsajahan/pearlDB\",\r\n});\r\n","import React, {createContext, useState, useEffect, useContext} from 'react';\r\n// import {auth} from '../firebase';\r\nimport api from '../api/api';\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext);\r\n}\r\n\r\nfunction AuthProvider(props){\r\n    const [loggedIn, setLoggedIn] = useState(undefined);\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const getLoggedIn = async () => {\r\n        const loggedInRes = await api.get(\"/admins/loggedIn\");\r\n        // console.log(loggedInRes.data);\r\n        setLoggedIn(loggedInRes.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        \r\n        if(!unmounted){\r\n            getLoggedIn();\r\n        };\r\n\r\n        return ()=>{unmounted=true};\r\n    }, []);\r\n\r\n    return (\r\n      <AuthContext.Provider\r\n        value={{ loggedIn, getLoggedIn, currentUser, setCurrentUser}}\r\n      >\r\n        {!loading && props.children}\r\n        {/* {props.children} */}\r\n      </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;\r\nexport {AuthProvider};","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  ButtonDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\n// import {Button, Modal, ModalHeader, ModalBody, Form, FormGroup,\r\n//         Label, Input } from 'reactstrap';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../contexts/AuthContext\";\r\nimport api from \"../api/api\";\r\n\r\nconst Header = () => {\r\n  const [isNavOpen, setIsNavOpen] = useState(false);\r\n  // const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  // const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n  const { getLoggedIn, currentUser, setCurrentUser } = useContext(AuthContext);\r\n\r\n  const toggleNav = () => {\r\n    setIsNavOpen(!isNavOpen);\r\n  };\r\n\r\n  // toggleModal(){\r\n  //     this.setState({\r\n  //         isModalOpen: !this.state.isModalOpen\r\n  //     });\r\n  // }\r\n\r\n  const handleLogout = async () => {\r\n    setError(\"\");\r\n\r\n    try {\r\n      await api.get(\"/admins/logout\");\r\n      await getLoggedIn();\r\n      setCurrentUser(null);\r\n      history.push(\"/login\");\r\n    } catch {\r\n      setError(\"Logout Failed\");\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  function toggleDropDown() {\r\n    setDropdownOpen(!dropdownOpen);\r\n    // this.setState({\r\n    //     dropdownOpen: !this.state.dropdownOpen\r\n    // });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar dark expand=\"md\">\r\n        <div className=\"container\">\r\n          <NavbarToggler onClick={toggleNav} />{\" \"}\r\n          {/*A button shown at the small screens, which will help to find the nav bar items */}\r\n          <NavbarBrand className=\"mr-5 font-italic\" href=\"/home\">\r\n            The Pearl\r\n          </NavbarBrand>\r\n          <Collapse isOpen={isNavOpen} navbar>\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/home\">\r\n                  <span className=\"fa fa-home fa-lg\"></span> Home\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/managecards\">\r\n                  <span className=\"fa fa-address-card fa-lg\"></span> Manage\r\n                  Cards\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/manageusers\">\r\n                  <span className=\"fa fa-users fa-lg\"></span> Manage Users\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              {/* <Button outline onClick={this.toggleModal}>\r\n                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                        </Button> */}\r\n              <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\r\n                <DropdownToggle className=\"bg-transparent\" outline>\r\n                  <span className=\"fa fa-user fa-lg\"> {currentUser}</span>\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem onClick={() => history.push(\"/signup\")}>\r\n                    <span className=\"fa fa-cog fa-lg\">\r\n                      {\" \"}\r\n                      Create a new account\r\n                    </span>\r\n                  </DropdownItem>\r\n                  <DropdownItem onClick={handleLogout}>\r\n                    <span className=\"fa fa-sign-out fa-lg\"> Logout</span>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </ButtonDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </div>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Jumbotron, Spinner, Progress, Row } from \"reactstrap\";\r\nimport Header from \"./Header\";\r\nimport api from \"../api/api\";\r\n\r\nfunction HomePage() {\r\n  //For Firebase\r\n  //   const [error, setError] = useState(\"\")\r\n  //   const { currentUser, logout } = useAuth()\r\n  //   const history = useHistory()\r\n\r\n  //   async function handleLogout() {\r\n  //     setError(\"\")\r\n\r\n  //     try {\r\n  //       await logout()\r\n  //       history.push(\"/login\")\r\n  //     } catch {\r\n  //       setError(\"Failed to log out\")\r\n  //     }\r\n  //   }\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n\r\n  //Retrieve users & cards\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/users\")\r\n      .then((response) => {\r\n        // console.log(response.data[0]);\r\n        setUsers(response.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error\");\r\n      });\r\n    api\r\n      .get(\"/cards\")\r\n      .then((response) => {\r\n        setCards(response.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error\");\r\n      });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Spinner className=\"spinner\" color=\"info\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Jumbotron>\r\n        <div className=\"container\">\r\n          <div className=\"row row-header\">\r\n            <div className=\"col-12 col-sm-6\">\r\n              <h1 className=\"font-italic\">The Pearl</h1>\r\n              <h5>Welcome to the admin portal</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Jumbotron>\r\n      <Row style={{ width: \"60%\", margin: \"auto\" }}>\r\n        <Progress\r\n          animated\r\n          style={{\r\n            flex: \"auto\",\r\n            alignContent: \"center\",\r\n            margin: \"50px 50px\",\r\n            height: \"30px\",\r\n          }}\r\n          value={users.length}\r\n        >\r\n          {users.length} Users\r\n        </Progress>\r\n      </Row>\r\n      <Row style={{ width: \"60%\", margin: \"auto\" }}>\r\n        <Progress\r\n          animated\r\n          color=\"info\"\r\n          style={{\r\n            flex: \"auto\",\r\n            alignContent: \"center\",\r\n            margin: \"auto 50px\",\r\n            height: \"30px\",\r\n          }}\r\n          value={cards.length}\r\n        >\r\n          {cards.length} Cards\r\n        </Progress>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, {useState} from 'react';\r\nimport FileBase64 from 'react-file-base64';\r\nimport { Form, FormGroup, Input, Label, Button, ModalHeader, Modal, ModalBody } from 'reactstrap';\r\n\r\nconst AddCards = ({onAdd}) => {\r\n    \r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [isModalOpen, set_isModalOpen] = useState(false);\r\n\r\n    const toggleModal = () => {\r\n        set_isModalOpen(!isModalOpen);\r\n    };\r\n\r\n    const updateName = e => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const updateType = e => {\r\n        setType(e.target.value);\r\n    };\r\n\r\n    const updateDescription = e => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const updateImage = base64 => {\r\n        setImage(base64);\r\n    };\r\n\r\n    const updatePrice = e => {\r\n        setPrice(e.target.value);\r\n    };\r\n\r\n\r\n    // Submit\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // console.log(name, description, image, price);\r\n        \r\n        if(!name || !description || !image || !price){\r\n            alert(\"Please fill the all parts\");\r\n            return\r\n        }\r\n        // console.log(`\\\\assets\\\\${(image.split('\\\\')[(image.split('\\\\')).length - 1])}`);\r\n\r\n        // var localImgLocation = (`/assets/${(image.split('\\\\')[(image.split('\\\\')).length - 1])}`);\r\n        // onAdd({name, type, description, price, image: localImgLocation});\r\n\r\n        onAdd({name, type, description, price, image});\r\n\r\n        setName('');\r\n        setType('');\r\n        setDescription('');\r\n        setImage('');\r\n        setPrice('');\r\n\r\n        toggleModal();\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n        <Button className=\"btn mt-2 mb-2 btn-info\" onClick={toggleModal}>\r\n            <span className=\"fa fa-plus fa-lg\"></span> Add a new card\r\n        </Button>\r\n        <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n            <ModalHeader toggle={toggleModal}>Add a card</ModalHeader>\r\n            <ModalBody>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"name\">Name</Label>\r\n                        <Input type=\"text\" value={name} id=\"name\" onChange={updateName}/>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"type\">Type</Label>\r\n                        <Input type=\"select\" value={type} id=\"type\" onChange={updateType} >\r\n                            <option></option>\r\n                            <option>Wedding Invitation</option>\r\n                            <option>Conference Invitation</option>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" maxLength=\"60\" value={description} id=\"description\" onChange={updateDescription} />\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"price\">Price</Label>\r\n                        <Input type=\"text\" value={price} id=\"price\" onChange={updatePrice}/>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"image\">Image</Label>\r\n                        <br/>\r\n                        {/* <Input type=\"file\" value={image} id=\"image\" onChange={updateImage} /> */}\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                        <FileBase64\r\n                            multiple={ false }\r\n                            onDone={({base64}) => updateImage(base64)} \r\n                        />\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" value=\"submit\" className=\"primary\" onClick={onSubmit}>Add the card</Button>\r\n                </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCards;","import React, { useState } from \"react\";\r\nimport FileBase64 from \"react-file-base64\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  ModalHeader,\r\n  Modal,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\n\r\nconst EditCards = ({ onEdit, card }) => {\r\n  const id = card._id;\r\n  const [name, setName] = useState(card.name);\r\n  const [type, setType] = useState(card.type);\r\n  const [description, setDescription] = useState(card.description);\r\n  // const [image, setImage] = useState('');\r\n  const [image, setImage] = useState(card.image);\r\n  const [price, setPrice] = useState(card.price);\r\n  const [isModalOpen, set_isModalOpen] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    set_isModalOpen(!isModalOpen);\r\n  };\r\n\r\n  const updateName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const updateType = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const updateDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const updateImage = (base64) => {\r\n    setImage(base64);\r\n  };\r\n\r\n  const updatePrice = (e) => {\r\n    setPrice(e.target.value);\r\n  };\r\n\r\n  //Submit\r\n  const onSubmit = (e) => {\r\n    // e.preventDefault();\r\n\r\n    if (!name || !description || !image || !price) {\r\n      alert(\"Please fill the all parts\");\r\n      return;\r\n    }\r\n\r\n    onEdit({ card_id: id, name, type, description, price, image });\r\n\r\n    setName(\"\");\r\n    setType(\"\");\r\n    setDescription(\"\");\r\n    setImage(\"\");\r\n    setPrice(\"\");\r\n\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"btn-sm bg-primary\" block onClick={toggleModal}>\r\n        Edit\r\n      </Button>\r\n      <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>Edit the card</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label htmlFor=\"id\">Id</Label>\r\n              <Input type=\"text\" value={id} id=\"id\" disabled />\r\n              {/* innerRef={ (input) => this.username = input } */}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"name\">Name</Label>\r\n              <Input type=\"text\" value={name} id=\"name\" onChange={updateName} />\r\n              {/* innerRef={ (input) => this.username = input } */}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"type\">Type</Label>\r\n              <Input type=\"select\" value={type} id=\"type\" onChange={updateType}>\r\n                <option>Wedding Invitation</option>\r\n                <option>Conference Invitation</option>\r\n                {/* innerRef={ (input) => this.username = input } */}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"description\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                maxLength=\"60\"\r\n                value={description}\r\n                id=\"description\"\r\n                onChange={updateDescription}\r\n              />\r\n              {/* innerRef={ (input) => this.username = input } */}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"price\">Price</Label>\r\n              <Input\r\n                type=\"text\"\r\n                value={price}\r\n                id=\"price\"\r\n                onChange={updatePrice}\r\n              />\r\n              {/* innerRef={ (input) => this.username = input } */}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"image\">Image</Label>\r\n              <br />\r\n              {/* <Input type=\"file\" value={image} id=\"image\" onChange={updateImage} /> */}\r\n              {/* innerRef={ (input) => this.username = input } */}\r\n              <FileBase64\r\n                value={image}\r\n                multiple={false}\r\n                onDone={({ base64 }) => updateImage(base64)}\r\n              />\r\n            </FormGroup>\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"submit\"\r\n              className=\"primary\"\r\n              onClick={onSubmit}\r\n            >\r\n              Save changes\r\n            </Button>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  CardSubtitle,\r\n  Button,\r\n  Badge,\r\n  ButtonGroup,\r\n  Spinner,\r\n  Modal,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport api from \"../api/api\";\r\nimport Header from \"./Header\";\r\nimport AddCards from \"./AddCards\";\r\nimport EditCards from \"./EditCards\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"../App.css\";\r\n// import {useHistory} from 'react-router-dom';\r\n\r\nconst ManageCards = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchedCards, setSearchedCards] = useState([]);\r\n  const [filteredCards, setFilteredCards] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // const history = useHistory()\r\n  const [isDeleteModalOpen, set_isDeleteModalOpen] = useState(false);\r\n  const [deleteCardId, setDeleteCardId] = useState();\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  const cardsPerPage = 4;\r\n  const cardsVisited = pageNumber * cardsPerPage;\r\n  const pageCount = Math.ceil(searchedCards.length / cardsPerPage);\r\n\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n\r\n  const toggleDeleteModal = () => {\r\n    set_isDeleteModalOpen(!isDeleteModalOpen);\r\n  };\r\n\r\n  //Add a card\r\n  const addCard = async (card) => {\r\n    api.post(\"/cards\", card).then(() => {\r\n      setCards([...cards, card]);\r\n      setFilteredCards([...filteredCards, card]);\r\n    });\r\n  };\r\n\r\n  //Edit the card\r\n  // const editCard = async (card) => {\r\n  //     const response = await api.put(`/cards`, card);\r\n  //     const {id} = response.data;\r\n  //     setCards(cards.map( card => {\r\n  //         return card.id===id ? {...response.data} : card;\r\n  //     }));\r\n  // };\r\n\r\n  const editCard = async (card) => {\r\n    const { card_id } = card;\r\n    api.put(`/cards`, card).then(() => {\r\n      setCards(\r\n        cards.map((scard) => {\r\n          return scard.id === card_id ? { card } : scard;\r\n        })\r\n      );\r\n      setFilteredCards(\r\n        filteredCards.map((fcard) => {\r\n          return fcard.id === card_id ? { card } : fcard;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  //Delete a card\r\n  const deleteCard = (id) => {\r\n    api.delete(`/cards/${id}`).then(() => {\r\n      setCards(cards.filter((card) => card.id !== id));\r\n      setFilteredCards(filteredCards.filter((fcard) => fcard.id !== id));\r\n    });\r\n    toggleDeleteModal();\r\n    window.location.reload();\r\n  };\r\n\r\n  // Filter Cards\r\n  const filterButton = (button = \"All\") => {\r\n    button === \"All\"\r\n      ? setFilteredCards(cards)\r\n      : setFilteredCards(cards.filter((card) => card.type === button));\r\n  };\r\n\r\n  // Search Cards\r\n  useEffect(() => {\r\n    // console.log('search changed');\r\n    setSearchedCards(\r\n      search.length !== 0\r\n        ? filteredCards.filter((fcard) => {\r\n            return (\r\n              fcard.name.toLowerCase().includes(search.toLowerCase()) ||\r\n              fcard.description.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n          })\r\n        : filteredCards\r\n    );\r\n  }, [search, filteredCards]);\r\n\r\n  // const searchCard = () => {\r\n  //     search.length !== 0 ?\r\n  //     setSearchedCards(\r\n  //         cards.filter( card => {\r\n  //             return card.name.toLowerCase().includes(search.toLowerCase()) || card.description.toLowerCase().includes(search.toLowerCase())\r\n  //         })\r\n  //     )\r\n  //     : setSearchedCards(cards)\r\n  // }\r\n\r\n  //Retrieve Cards\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/cards\")\r\n      .then((response) => {\r\n        setCards(response.data);\r\n        setFilteredCards(response.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error\");\r\n      });\r\n  }, []);\r\n\r\n  function RenderEventCard({ card, onDelete }) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Card style={{ minWidth: \"280px\" }}>\r\n          <span>\r\n            <Badge color=\"info\">{card.price}</Badge>\r\n          </span>\r\n          <CardImg top src={card.image} alt=\"Invitation Card\" />\r\n          <CardBody>\r\n            <CardTitle tag=\"h5\">{card.name} </CardTitle>\r\n            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n              {card.type}{\" \"}\r\n              {card.new ? (\r\n                <span>\r\n                  <Badge pill color=\"danger\">\r\n                    New\r\n                  </Badge>\r\n                </span>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </CardSubtitle>\r\n            <CardText style={{ minHeight: \"80px\" }}>\r\n              {card.description}\r\n            </CardText>\r\n            <EditCards onEdit={editCard} card={card} />{\" \"}\r\n            <Button className=\"btn-sm bg-danger\" block onClick={onDelete}>\r\n              Delete\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // const eventcard = searchedCards.map((card) => {     //Here we are mapping the filtered cards for the searching purposes\r\n  //     return(\r\n  //         <div key={card._id} className=\"col-sm-4 col-md-3\">\r\n  //                 <RenderEventCard card={card} onDelete={() => deleteCard(card._id)}/>\r\n  //         </div>\r\n  //     );\r\n  // });\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Spinner className=\"spinner\" color=\"info\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"5\" md=\"4 fluid\" className=\"m-auto center\">\r\n            <AddCards onAdd={addCard} />\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"7\" md=\"4 fluid\" className=\"m-auto center\">\r\n            <ButtonGroup>\r\n              <Button color=\"info\" onClick={() => filterButton(\"All\")}>\r\n                All\r\n              </Button>\r\n              <Button\r\n                color=\"info\"\r\n                onClick={() => filterButton(\"Conference Invitation\")}\r\n              >\r\n                Conference\r\n              </Button>\r\n              <Button\r\n                color=\"info\"\r\n                onClick={() => filterButton(\"Wedding Invitation\")}\r\n              >\r\n                Wedding\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"4 fluid\" className=\"m-auto center\">\r\n            <Input\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"row\">\r\n            {cards.length > 0\r\n              ? searchedCards\r\n                  .slice(cardsVisited, cardsVisited + cardsPerPage)\r\n                  .map((card) => {\r\n                    //Here we are mapping the filtered cards for the searching purposes\r\n                    return (\r\n                      <div key={card._id} className=\"col-sm-4 col-md-3\">\r\n                        <RenderEventCard\r\n                          card={card}\r\n                          onDelete={() => {\r\n                            toggleDeleteModal();\r\n                            setDeleteCardId(card._id);\r\n                            // console.log(deleteCardId);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })\r\n              : \"No cards to show\"}\r\n          </div>\r\n        </Row>\r\n        <Row>\r\n          <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            pageCount={pageCount}\r\n            onPageChange={changePage}\r\n            containerClassName={\"paginationBtn\"}\r\n            activeClassName={\"paginationActive\"}\r\n          />\r\n        </Row>\r\n      </div>\r\n      <div>\r\n        {/* Delete user Modal */}\r\n        <Modal isOpen={isDeleteModalOpen} toggle={toggleDeleteModal}>\r\n          <ModalBody>\r\n            Do you want to delete this card?\r\n            <br />\r\n            <Button\r\n              style={{ margin: \"auto\" }}\r\n              onClick={() => deleteCard(deleteCardId)}\r\n            >\r\n              Yes, Delete this card\r\n            </Button>\r\n            <Button\r\n              style={{ margin: \"0px 10px\" }}\r\n              onClick={() => toggleDeleteModal()}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageCards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  ButtonGroup,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  FormGroup,\r\n  Label,\r\n  Form,\r\n  ModalBody,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n// import {Link} from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport api from \"../api/api\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst ManageUsers = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchedUsers, setSearchedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [isModalOpen, set_isModalOpen] = useState(false);\r\n  const [isDeleteModalOpen, set_isDeleteModalOpen] = useState(false);\r\n  const [tempUser, setTempUser] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [deleteUserId, setDeleteUserId] = useState();\r\n\r\n  const usersPerPage = 7;\r\n  const usersVisited = pageNumber * usersPerPage;\r\n  const pageCount = Math.ceil(searchedUsers.length / usersPerPage);\r\n\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n\r\n  //Edit the user\r\n  const editUser = async (user) => {\r\n    const response = await api.put(`/users`, user);\r\n    const { id } = response.data;\r\n    setUsers(\r\n      users.map((user) => {\r\n        return user.id === id ? { ...response.data } : user;\r\n      })\r\n    );\r\n  };\r\n\r\n  const updateName = (e) => {\r\n    setTempUser({ ...tempUser, name: e.target.value });\r\n    // setName(e.target.value);\r\n  };\r\n\r\n  const updateEmail = (e) => {\r\n    setTempUser({ ...tempUser, email: e.target.value });\r\n    // setEmail(e.target.value);\r\n  };\r\n\r\n  const updateDescription = (e) => {\r\n    setTempUser({ ...tempUser, description: e.target.value });\r\n    // setDescription(e.target.value);\r\n  };\r\n\r\n  // Submit\r\n  const onSubmit = (e) => {\r\n    // e.preventDefault();\r\n\r\n    if (!tempUser.name || !tempUser.description || !tempUser.email) {\r\n      alert(\"Please fill the all parts\");\r\n      return;\r\n    }\r\n\r\n    editUser({\r\n      user_id: tempUser._id,\r\n      name: tempUser.name,\r\n      email: tempUser.email,\r\n      description: tempUser.description,\r\n    });\r\n\r\n    // setName('');\r\n    // setEmail('');\r\n    // setDescription('');\r\n\r\n    toggleModal();\r\n  };\r\n\r\n  //Delete user\r\n  const deleteUser = (id) => {\r\n    api.delete(`/users/${id}`).then(() => {\r\n      setUsers(users.filter((user) => user.id !== id));\r\n      setSearchedUsers(searchedUsers.filter((fuser) => fuser.id !== id));\r\n    });\r\n    toggleDeleteModal();\r\n    window.location.reload();\r\n    // setSearchedUsers(searchedUsers.filter((fuser) => fuser.id !== id));\r\n  };\r\n  // console.log(users)\r\n\r\n  // Search User\r\n  useEffect(() => {\r\n    setSearchedUsers(\r\n      search.length !== 0\r\n        ? users.filter((user) => {\r\n            return (\r\n              user.name.toLowerCase().includes(search.toLowerCase()) ||\r\n              user.email.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n          })\r\n        : users\r\n    );\r\n  }, [search, users]);\r\n\r\n  //Retrieve users\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/users\")\r\n      .then((response) => {\r\n        // console.log(response.data[0]);\r\n        setUsers(response.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error\");\r\n      });\r\n  }, []);\r\n\r\n  const toggleModal = () => {\r\n    set_isModalOpen(!isModalOpen);\r\n  };\r\n\r\n  const toggleDeleteModal = () => {\r\n    set_isDeleteModalOpen(!isDeleteModalOpen);\r\n  };\r\n\r\n  //   const usercard = searchedUsers.map((user, index) => {\r\n  //     return (\r\n  //       <tr key={index}>\r\n  //         <td>{index + 1}</td>\r\n  //         <td>{user.name}</td>\r\n  //         <td>{user.email}</td>\r\n  //         <td>{user.description}</td>\r\n  //         <td>\r\n  //           <ButtonGroup className=\"btn-group-sm\">\r\n  //             <Button\r\n  //               color=\"primary\"\r\n  //               onClick={() => {\r\n  //                 toggleModal();\r\n  //                 setTempUser(user);\r\n  //               }}\r\n  //             >\r\n  //               <span className=\"fa fa-edit\" /> Edit\r\n  //             </Button>\r\n  //             <Button color=\"danger\" onDoubleClick={() => deleteUser(user._id)}>\r\n  //               <span className=\"fa fa-trash-o\" /> Delete\r\n  //             </Button>\r\n  //           </ButtonGroup>\r\n  //         </td>\r\n  //       </tr>\r\n  //     );\r\n  //   });\r\n\r\n  const displayUsers = searchedUsers\r\n    .slice(usersVisited, usersVisited + usersPerPage)\r\n    .map((user, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          {/* <Link to={`/manageusers/${user._id}`}> */}\r\n          <td>{usersVisited + index + 1}</td>\r\n          {/* <td>{user._id}</td> */}\r\n          <td>{user.name}</td>\r\n          <td>{user.email}</td>\r\n          <td>{user.description}</td>\r\n          {/* </Link> */}\r\n          <td>\r\n            <ButtonGroup className=\"btn-group-sm\">\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  setTempUser(user);\r\n                }}\r\n              >\r\n                <span className=\"fa fa-edit\" /> Edit\r\n              </Button>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => {\r\n                  toggleDeleteModal();\r\n                  setDeleteUserId(user._id);\r\n                }}\r\n              >\r\n                <span className=\"fa fa-trash-o\" /> Delete\r\n              </Button>\r\n            </ButtonGroup>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Spinner className=\"spinner\" color=\"info\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Input\r\n          className=\"w-25 mr-auto mt-2 mb-2\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n        <Table hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              {/* <th>User ID</th> */}\r\n              <th>Name of the user</th>\r\n              <th>Email ID</th>\r\n              <th>Description</th>\r\n              <th>Edit/Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.length > 0 ? (\r\n              displayUsers\r\n            ) : (\r\n              <tr>\r\n                <td>No users to show</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n\r\n        <ReactPaginate\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          pageCount={pageCount}\r\n          onPageChange={changePage}\r\n          containerClassName={\"paginationBtn\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n\r\n        <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n          <ModalHeader toggle={toggleModal}>Edit User</ModalHeader>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label htmlFor=\"id\">Id</Label>\r\n                <Input type=\"text\" value={tempUser._id} id=\"id\" disabled />\r\n                {/* innerRef={ (input) => this.username = input } */}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"name\">Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={tempUser.name}\r\n                  id=\"name\"\r\n                  onChange={updateName}\r\n                />\r\n                {/* innerRef={ (input) => this.username = input } */}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  value={tempUser.email}\r\n                  id=\"email\"\r\n                  onChange={updateEmail}\r\n                />\r\n                {/* innerRef={ (input) => this.username = input } */}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"description\">Description</Label>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  value={tempUser.description}\r\n                  id=\"description\"\r\n                  onChange={updateDescription}\r\n                />\r\n                {/* innerRef={ (input) => this.username = input } */}\r\n              </FormGroup>\r\n              <Button\r\n                type=\"submit\"\r\n                value=\"submit\"\r\n                className=\"primary\"\r\n                onClick={onSubmit}\r\n              >\r\n                Update User\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n        {/* Delete user Modal */}\r\n        <Modal isOpen={isDeleteModalOpen} toggle={toggleDeleteModal}>\r\n          <ModalBody>\r\n            Do you want to delete this user?\r\n            <br />\r\n            <Button\r\n              style={{ margin: \"auto\" }}\r\n              onClick={() => deleteUser(deleteUserId)}\r\n            >\r\n              Yes, Delete this user\r\n            </Button>\r\n            <Button\r\n              style={{ margin: \"0px 10px\" }}\r\n              onClick={() => toggleDeleteModal()}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import React, { useRef, useState, useContext } from \"react\";\r\nimport {\r\n  Jumbotron,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  CardBody,\r\n  Card,\r\n  CardTitle,\r\n  Button,\r\n  Alert,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../contexts/AuthContext\";\r\nimport api from \"../api/api\";\r\n\r\nfunction Login() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  // const checkRef = useRef();\r\n  // const {login} = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { getLoggedIn, setCurrentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  // const [profile, setProfile] = useState('');\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const loginData = {\r\n        email: emailRef.current.value,\r\n        password: passwordRef.current.value,\r\n      };\r\n      setError(\"\");\r\n      setLoading(true);\r\n      // await login(emailRef.current.value, passwordRef.current.value)\r\n      await api.post(\"/admins/login/\", loginData);\r\n      await getLoggedIn();\r\n      setCurrentUser(emailRef.current.value);\r\n      history.push(\"/home\");\r\n    } catch {\r\n      setError(\"Failed to Login\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  // async function handleSubmit(e){\r\n  //     e.preventDefault();\r\n  //     if(profile.emailId===emailRef.current.value && profile.password===passwordRef.current.value)\r\n  //     // <Redirect to=\"/home\" />\r\n  //         history.push(\"/home\")\r\n  //     else{\r\n  //         setError(\"Incorrect email and/or password\")\r\n  //     }\r\n  // }\r\n\r\n  //Retrieve Auth Details\r\n  // const retrieveAuth = async () => {\r\n  //     const response = await api.get('/profile');\r\n  //     return response.data;\r\n  // }\r\n  // useEffect(() => {\r\n  //     const getAllProfiles = async () => {\r\n  //         const allProfiles = await retrieveAuth();\r\n  //         if(allProfiles) setProfile(allProfiles);\r\n  //     };\r\n\r\n  //     getAllProfiles();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className>\r\n      <Jumbotron>\r\n        <div className=\"container\">\r\n          <div className=\"row row-header\">\r\n            <div className=\"col-12 col-sm-6\">\r\n              <h1 className=\"font-italic\">The Pearl</h1>\r\n              <h5>Welcome to the Login page</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Jumbotron>\r\n      <Card className=\"col-10 col-sm-6 m-auto\">\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Login</CardTitle>\r\n          {error && <Alert color=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n              <Label htmlFor=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email  \"\r\n                innerRef={emailRef}\r\n                required\r\n              />\r\n              {/* innerRef={ (input) => this.username = input } */}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                innerRef={passwordRef}\r\n                required\r\n              />\r\n              {/* innerRef={ (input) => this.password = input } */}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button\r\n                disabled={loading}\r\n                type=\"submit\"\r\n                className=\"mt-2 primary btn-block\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n          {/* <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n          </div> */}\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Alert, Input, FormGroup, Label, Col } from \"reactstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link } from \"react-router-dom\"\n\nexport default function ForgotPassword() {\n  const emailRef = useRef();\n  const { resetPassword } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      // console.log(emailRef.current.value);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n    } catch {\n      setError(\"Failed to reset password\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <>\n    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n      <div className=\"w-100 mt-2\">\n        <Link to=\"/\">Go back</Link>\n      </div>\n      <h3 className=\"text-center mb-3\">Password Reset</h3>\n      {error && <Alert color=\"danger\">{error}</Alert>}\n      {message && <Alert color=\"success\">{message}</Alert>}\n      <Form onSubmit={handleSubmit}>\n        <FormGroup id=\"email\">\n          <Label>Email</Label>\n          <Input type=\"email\" innerRef={emailRef} required />\n        </FormGroup>\n        <Button disabled={loading} className=\"w-100\" type=\"submit\">\n          Reset Password\n        </Button>\n      </Form>\n    </Col>\n    </>\n  )\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { loggedIn } = useAuth();\n  // console.log(loggedIn);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return loggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />;\n      }}\n    ></Route>\n  );\n}\n","import React, { useRef, useState, useContext } from \"react\";\nimport { Form, Button, Card, Alert, FormGroup, Label, CardBody, Input } from \"reactstrap\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport api from '../api/api';\n\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  // const { signup } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { getLoggedIn } = useContext(AuthContext);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    // console.log(emailRef.current.value);\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    try {\n      const signupData = {email:emailRef.current.value, password:passwordRef.current.value, confirmPassword:passwordConfirmRef.current.value};\n      // console.log(signupData);\n      setError(\"\")\n      setLoading(true)\n      // await signup(emailRef.current.value, passwordRef.current.value)\n      await api.post('/admins/', signupData);\n      await getLoggedIn();\n      history.push(\"/home\")\n    } catch {\n      setError(\"Failed to create an account\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Card className=\"col-10 col-sm-6 m-auto\">\n        <CardBody>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <FormGroup id=\"email\">\n              <Label>Email</Label>\n              <Input type=\"email\" innerRef={emailRef} required />\n            </FormGroup>\n            <FormGroup id=\"password\">\n              <Label>Password</Label>\n              <Input type=\"password\" innerRef={passwordRef} required />\n            </FormGroup>\n            <FormGroup id=\"password-confirm\">\n              <Label>Password Confirmation</Label>\n              <Input type=\"password\" innerRef={passwordConfirmRef} required />\n            </FormGroup>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Log In</Link>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\n// import Header from './Header';\r\n// import Footer from './Footer';\r\nimport HomePage from './HomePage';\r\nimport ManageCards from './ManageCards';\r\nimport ManageUsers from './ManageUsers';\r\nimport LoginPage from './LoginPage';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport {AuthProvider} from '../contexts/AuthContext';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport Signup from \"./Signup\"\r\n\r\n\r\n\r\nconst Main = () => {\r\n\r\n        return(\r\n            <div>\r\n                {/* <Header/> */}\r\n                <AuthProvider>\r\n                    <Switch>\r\n                        <PrivateRoute exact path=\"/home\" component={HomePage}/>\r\n                        <PrivateRoute exact path=\"/managecards\" component={ManageCards}/>\r\n                        <PrivateRoute exact path=\"/manageusers\" component={ManageUsers}/>\r\n                        {/* <Route exact path=\"/home\" component={HomePage}/>\r\n                        <Route exact path=\"/managecards\" component={ManageCards}/>\r\n                        <Route exact path=\"/manageusers\" component={ManageUsers}/> */}\r\n                        {/* <PrivateRoute exact path=\"/manageusers/:userId\" component={ManageUsers}/> */}\r\n                        <Route path=\"/login\" component={LoginPage}/>\r\n                        <PrivateRoute path=\"/signup\" component={Signup} />\r\n                        <Route exact path=\"/forgot-password\" component={ForgotPassword}/>\r\n                        <Redirect to=\"/login\"/>\r\n                    </Switch>\r\n                </AuthProvider>\r\n                {/* <Footer/> */}\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Main;","import Main from './components/Main';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;  //This is what helps browser to get the cookie\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\"> \n        <Main/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}